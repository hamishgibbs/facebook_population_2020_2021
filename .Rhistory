ggutils::geo_lims(mob_lines) +
theme_void()
mob_lines %>%
ggplot() +
ggutils::plot_basemap("United Kingdom") +
geom_sf(data=la, size=0.1, color="black", fill="white") +
geom_sf(aes(size=n_crisis)) +
scale_size_continuous(range=c(0.5, 4)) +
ggutils::geo_lims(mob_lines) +
theme_void()
mob_lines %>%
ggplot() +
ggutils::plot_basemap("United Kingdom") +
geom_sf(data=la, size=0.1, color="black", fill="white") +
geom_sf(aes(size=n_crisis)) +
scale_size_continuous(range=c(0.5, 6)) +
ggutils::geo_lims(mob_lines) +
theme_void()
read_rds("/Users/hamishgibbs/Documents/LSHTM/Covid-19/fb_population_paper/data/config/periods.rds")
suppressPackageStartupMessages({
require(tidyverse)
require(sf)
})
if (interactive()){
.args <- c(
"data/oa_mid_year_estimates/2020/tile_mye_pop_2020.csv",
"output/validation/tile_mye_pop_2020_validation.png"
)
} else {
.args <- commandArgs(trailingOnly = T)
}
read_csv(.args[1])
setwd("/Users/hamishgibbs/Documents/UCL/fb_population_rework")
suppressPackageStartupMessages({
require(tidyverse)
require(sf)
})
if (interactive()){
.args <- c(
"data/oa_mid_year_estimates/2020/tile_mye_pop_2020.csv",
"output/validation/tile_mye_pop_2020_validation.png"
)
} else {
.args <- commandArgs(trailingOnly = T)
}
read_csv(.args[1])
suppressPackageStartupMessages({
require(tidyverse)
require(sf)
})
if (interactive()){
.args <- c(
"data/oa_mid_year_estimates/2020/tile_mye_pop_2020.csv",
"data/geometry/tiles_12/tiles.shp",
"output/validation/tile_mye_pop_2020_validation.png"
)
} else {
.args <- commandArgs(trailingOnly = T)
}
read_csv(.args[1])
ons_pop <- read_csv(.args[1])
tiles <- st_read(.args[2])
ons_pop
tiles
tiles %>%
left_join(ons_pop, by="quadkey")
tiles %>%
left_join(ons_pop, by="quadkey") %>%
drop_na(population)
tiles %>%
left_join(ons_pop, by="quadkey") %>%
drop_na(population) %>%
ggplot() +
geom_sf()
p <- tiles %>%
left_join(ons_pop, by="quadkey") %>%
drop_na(population) %>%
ggplot() +
geom_sf()
require(tidyverse)
require(sf)
source("covid_household_figs/src/theme.R")
in_data <- read_csv("covid_household_figs/data/processed/household_size_ethnic.csv")
name_factor <- list(
levels = c("size_1_perc", "size_2_perc", "size_3_perc", "size_4_to_5_perc",
"size_6_to_7_perc", "size_gt_8_perc"),
labels = c("1 Person", "2 People", "3 People", "4-5 People",
"6-7 People", "8+ People")
)
fill_pal <- c('#fef0d9','#fdcc8a','#fc8d59','#e34a33','#b30000')
names(fill_pal) <- name_factor$labels
in_data_long <- in_data %>%
pivot_longer(!c(ethnicity)) %>%
mutate(ethnicity = factor(ethnicity,
levels = ethnicity_factor$levels,
labels = ethnicity_factor$labels)) %>%
mutate(name = factor(name,
levels = name_factor$levels,
labels = name_factor$labels))
max_value <- max(in_data_long$value)
p <- in_data_long %>%
ggplot(aes(x = ethnicity, y = value, fill = name)) +
geom_bar(stat = "identity",
position = position_dodge(0.75), width=0.7) +
geom_text(aes(label=value), position=position_dodge(0.75), vjust=-0.25, size = 3) +
labs(y = "Percent (%)", x = NULL, title = "c", subtitle = "Household size by ethnic group",
fill = NULL) +
scale_fill_manual(values=fill_pal) +
theme_classic() +
ylim(0, max_value + 5) +
guides(fill=guide_legend(nrow=1,byrow=TRUE)) +
theme(legend.position = "bottom") +
shared_theme()
ggutils::ggsave_png_pdf(p, "covid_household_figs/output/figs/house_size_ethnic.png",
10, 5)
write_rds(p, "covid_household_figs/output/figs/house_size_ethnic.rds")
setwd("/Users/hamishgibbs/Documents/LSHTM/Covid-19/wing_covid_figures")
require(tidyverse)
require(sf)
source("covid_household_figs/src/theme.R")
require(tidyverse)
require(sf)
in_data <- read_csv("covid_household_figs/data/processed/household_size_ethnic.csv")
setwd("/Users/hamishgibbs/Documents/LSHTM/Covid-19")
require(tidyverse)
require(sf)
source("covid_household_figs/src/theme.R")
in_data <- read_csv("covid_household_figs/data/processed/household_size_ethnic.csv")
name_factor <- list(
levels = c("size_1_perc", "size_2_perc", "size_3_perc", "size_4_to_5_perc",
"size_6_to_7_perc", "size_gt_8_perc"),
labels = c("1 Person", "2 People", "3 People", "4-5 People",
"6-7 People", "8+ People")
)
fill_pal <- c('#fef0d9','#fdcc8a','#fc8d59','#e34a33','#b30000')
names(fill_pal) <- name_factor$labels
fill_pal
fill_pal <- c('#fef0d9','#fdd49e','#fdbb84','#fc8d59','#e34a33','#b30000')
names(fill_pal) <- name_factor$labels
in_data_long <- in_data %>%
pivot_longer(!c(ethnicity)) %>%
mutate(ethnicity = factor(ethnicity,
levels = ethnicity_factor$levels,
labels = ethnicity_factor$labels)) %>%
mutate(name = factor(name,
levels = name_factor$levels,
labels = name_factor$labels))
max_value <- max(in_data_long$value)
p <- in_data_long %>%
ggplot(aes(x = ethnicity, y = value, fill = name)) +
geom_bar(stat = "identity",
position = position_dodge(0.75), width=0.7) +
geom_text(aes(label=value), position=position_dodge(0.75), vjust=-0.25, size = 3) +
labs(y = "Percent (%)", x = NULL, title = "c", subtitle = "Household size by ethnic group",
fill = NULL) +
scale_fill_manual(values=fill_pal) +
theme_classic() +
ylim(0, max_value + 5) +
guides(fill=guide_legend(nrow=1,byrow=TRUE)) +
theme(legend.position = "bottom") +
shared_theme()
p
require(tidyverse)
require(sf)
source("covid_household_figs/src/theme.R")
in_data <- read_csv("covid_household_figs/data/processed/household_size_ethnic.csv")
name_factor <- list(
levels = c("size_1_perc", "size_2_perc", "size_3_perc", "size_4_to_5_perc",
"size_6_to_7_perc", "size_gt_8_perc"),
labels = c("1 Person", "2 People", "3 People", "4-5 People",
"6-7 People", "8+ People")
)
fill_pal <- c('#fef0d9','#fdd49e','#fdbb84','#fc8d59','#e34a33','#b30000')
names(fill_pal) <- name_factor$labels
in_data_long <- in_data %>%
pivot_longer(!c(ethnicity)) %>%
mutate(ethnicity = factor(ethnicity,
levels = ethnicity_factor$levels,
labels = ethnicity_factor$labels)) %>%
mutate(name = factor(name,
levels = name_factor$levels,
labels = name_factor$labels))
max_value <- max(in_data_long$value)
p <- in_data_long %>%
ggplot(aes(x = ethnicity, y = value, fill = name)) +
geom_bar(stat = "identity",
position = position_dodge(0.75), width=0.7) +
geom_text(aes(label=value), position=position_dodge(0.75), vjust=-0.25, size = 3) +
labs(y = "Percent (%)", x = NULL, title = "c", subtitle = "Household size by ethnic group",
fill = NULL) +
scale_fill_manual(values=fill_pal) +
theme_classic() +
ylim(0, max_value + 5) +
guides(fill=guide_legend(nrow=1,byrow=TRUE)) +
theme(legend.position = "bottom") +
shared_theme()
ggutils::ggsave_png_pdf(p, "covid_household_figs/output/figs/house_size_ethnic.png",
10, 5)
write_rds(p, "covid_household_figs/output/figs/house_size_ethnic.rds")
require(cowplot)
require(tidyverse)
panel_a <- read_rds("output/figs/map_panel.rds")
panel_b <- read_rds("output/figs/house_comp_ethnic.rds")
panel_c <- read_rds("output/figs/house_size_ethnic.rds")
panel_d <- read_rds("output/figs/house_composition_ethnic_imd.rds")
p_bcd <- cowplot::plot_grid(panel_b, panel_c, panel_d, nrow = 3)
p <- cowplot::plot_grid(panel_a, p_bcd, nrow = 1, rel_widths = c(0.37, 0.63))
ggutils::ggsave_png_pdf(p, "output/figs/figure_combined.png",
15.2, 8.5)
setwd("/Users/hamishgibbs/Documents/LSHTM/Covid-19/covid_household_figs")
require(cowplot)
require(tidyverse)
panel_a <- read_rds("output/figs/map_panel.rds")
panel_b <- read_rds("output/figs/house_comp_ethnic.rds")
panel_c <- read_rds("output/figs/house_size_ethnic.rds")
panel_d <- read_rds("output/figs/house_composition_ethnic_imd.rds")
p_bcd <- cowplot::plot_grid(panel_b, panel_c, panel_d, nrow = 3)
p <- cowplot::plot_grid(panel_a, p_bcd, nrow = 1, rel_widths = c(0.37, 0.63))
ggutils::ggsave_png_pdf(p, "output/figs/figure_combined.png",
15.2, 8.5)
setwd("/Users/hamishgibbs/Documents/UCL/fb_population_rework")
rm(list = ls())
suppressPackageStartupMessages({
require(tidyverse)
require(sf)
})
if (interactive()){
.args <- c(
"data/mid_year_estimates/2019/scotland_dz_mye_population_2019.csv",
"data/lookups/scotland_oa_to_dz.csv"
)
} else {
.args <- commandArgs(trailingOnly = T)
}
dz_pop <- read_csv(.args[1])
dz_pop
oa_dz_lookup
oa_dz_lookup <- read_csv(.args[2])
oa_dz_lookup
dz_pop
oa_dz_lookup
oa_dz_lookup
oa_dz_lookup %>%
left_join(dz_pop, by = c("DataZone" = "area_code"))
oa_dz_lookup %>%
left_join(dz_pop, by = c("DataZone" = "area_code")) %>%
filter(is.na(population))
oa_dz_lookup %>%
left_join(dz_pop, by = c("DataZone" = "area_code")) %>%
group_by(DataZone) %>%
mutate(n_oas_per_dz = length(unique(code)))
oa_dz_lookup %>%
left_join(dz_pop, by = c("DataZone" = "area_code")) %>%
group_by(DataZone) %>%
mutate(n_oas_per_dz = length(unique(code))) %>%
ungroup() %>%
mutate(population = population / n_oas_per_dz)
oa_dz_lookup %>%
left_join(dz_pop, by = c("DataZone" = "area_code")) %>%
group_by(DataZone) %>%
mutate(n_oas_per_dz = length(unique(code))) %>%
ungroup() %>%
mutate(population = population / n_oas_per_dz) %>%
select(-DataZone, n_oas_per_dz)
oa_dz_lookup %>%
left_join(dz_pop, by = c("DataZone" = "area_code")) %>%
group_by(DataZone) %>%
mutate(n_oas_per_dz = length(unique(code))) %>%
ungroup() %>%
mutate(population = population / n_oas_per_dz) %>%
select(-DataZone, -n_oas_per_dz)
oa_dz_lookup %>%
left_join(dz_pop, by = c("DataZone" = "area_code")) %>%
group_by(DataZone) %>%
mutate(n_oas_per_dz = length(unique(code))) %>%
ungroup() %>%
mutate(population = population / n_oas_per_dz) %>%
select(-DataZone, -n_oas_per_dz) %>%
rename(area_code = code)
# Script to aggregate population estimates to tiles
suppressPackageStartupMessages({
require(tidyverse)
require(sf)
})
if (interactive()){
.args <- c(
"data/mid_year_estimates/2019/england_wales_mye_population_2019.csv",
"data/lookups/england_wales_oa_to_tile.csv",
"data/mid_year_estimates/2019/england_wales_mye_pop_tile_2019.csv"
)
} else {
.args <- commandArgs(trailingOnly = T)
}
geom_tile_lookup <- read_csv(.args[1])
geom_tile_lookup
# Script to aggregate population estimates to tiles
suppressPackageStartupMessages({
require(tidyverse)
require(sf)
})
if (interactive()){
.args <- c(
"data/mid_year_estimates/2019/england_wales_mye_population_2019.csv",
"data/lookups/england_wales_oa_to_tile.csv",
"data/mid_year_estimates/2019/england_wales_mye_pop_tile_2019.csv"
)
} else {
.args <- commandArgs(trailingOnly = T)
}
mye_pop <- read_csv(.args[1])
mye_pop
geom_tile_lookup <- read_csv(.args[2])
geom_tile_lookup
mye_pop
mye_pop %>%
left_join(geom_tile_lookup, by = c("area_code" = "OA11CD"))
mye_pop %>%
left_join(geom_tile_lookup, by = c("area_code" = "OA11CD")) %>%
group_by(quadkey) %>%
summarise(population = sum(population, na.rm=T))
tile_pop <- mye_pop %>%
left_join(geom_tile_lookup, by = c("area_code" = "OA11CD")) %>%
group_by(quadkey) %>%
summarise(population = sum(population, na.rm=T))
# Script to aggregate population estimates to tiles
suppressPackageStartupMessages({
require(tidyverse)
require(sf)
})
if (interactive()){
.args <- c(
"data/mid_year_estimates/2019/england_wales_mye_population_2019.csv",
"data/lookups/england_wales_oa_to_tile.csv",
"data/mid_year_estimates/2019/england_wales_mye_pop_tile_2019.csv"
)
GEOMETRY_NAME <- "OA11CD"
} else {
.args <- commandArgs(trailingOnly = T)
GEOMETRY_NAME <- Sys.getenv("GEOMETRY_NAME")
}
# Script to aggregate population estimates to tiles
suppressPackageStartupMessages({
require(tidyverse)
require(sf)
})
if (interactive()){
.args <- c(
"data/mid_year_estimates/2019/england_wales_mye_population_2019.csv",
"data/lookups/england_wales_oa_to_tile.csv",
"data/mid_year_estimates/2019/england_wales_mye_pop_tile_2019.csv"
)
GEOMETRY_NAME <- "OA11CD"
} else {
.args <- commandArgs(trailingOnly = T)
GEOMETRY_NAME <- Sys.getenv("GEOMETRY_NAME")
}
mye_pop <- read_csv(.args[1])
geom_tile_lookup <- read_csv(.args[2])
tile_pop <- mye_pop %>%
left_join(geom_tile_lookup, by = c("area_code" = RETAIN_COLNAMES)) %>%
group_by(quadkey) %>%
summarise(population = sum(population, na.rm=T))
tile_pop <- mye_pop %>%
left_join(geom_tile_lookup, by = c("area_code" = !!RETAIN_COLNAMES)) %>%
group_by(quadkey) %>%
summarise(population = sum(population, na.rm=T))
left_join(geom_tile_lookup, by = c("area_code" = Sym(RETAIN_COLNAMES)) %>%
mye_pop %>%
left_join(geom_tile_lookup, by = c("area_code" = GEOMETRY_NAME))
mye_pop %>%
left_join(geom_tile_lookup, by = c("area_code" = GEOMETRY_NAME))
mye_pop %>%
left_join(geom_tile_lookup, by = c("area_code" = GEOMETRY_NAME))
mye_pop %>%
left_join(geom_tile_lookup, by = c("area_code" = GEOMETRY_NAME)) %>%
group_by(quadkey) %>%
summarise(population = sum(population, na.rm=T))
tile_pop <- mye_pop %>%
left_join(geom_tile_lookup, by = c("area_code" = GEOMETRY_NAME)) %>%
group_by(quadkey) %>%
summarise(population = sum(population, na.rm=T))
tile_pop
suppressPackageStartupMessages({
require(tidyverse)
require(sf)
})
if (interactive()){
.args <- c(
"data/oa_mid_year_estimates/2020/tile_mye_pop_2020.csv",
"data/geometry/tiles_12/tiles.shp",
"output/validation/tile_mye_pop_2020_validation.png"
)
} else {
.args <- commandArgs(trailingOnly = T)
}
ons_pop <- read_csv(.args[1])
if (interactive()){
.args <- c(
"data/oa_mid_year_estimates/tile_mye_pop_2020.csv",
"data/geometry/tiles_12/tiles.shp",
"output/validation/tile_mye_pop_2020_validation.png"
)
} else {
.args <- commandArgs(trailingOnly = T)
}
ons_pop <- read_csv(.args[1])
if (interactive()){
.args <- c(
"data/mid_year_estimates/tile_mye_pop_2020.csv",
"data/geometry/tiles_12/tiles.shp",
"output/validation/tile_mye_pop_2020_validation.png"
)
} else {
.args <- commandArgs(trailingOnly = T)
}
ons_pop <- read_csv(.args[1])
tiles <- st_read(.args[2])
ons_pop
tiles
ons_pop <- read_csv(.args[1]) %>%
mutate(quadkey = stringr::str_pad(quadkey, 12, "left", "0"))
ons_pop
ons_pop <- read_csv(.args[1]) %>%
mutate(quadkey = stringr::str_pad(quadkey, 12, "left", "0"))
tiles <- st_read(.args[2])
p <- tiles %>%
left_join(ons_pop, by="quadkey") %>%
drop_na(population) %>%
ggplot() +
geom_sf()
p
p <- tiles %>%
left_join(ons_pop, by="quadkey") %>%
drop_na(population) %>%
ggplot() +
geom_sf(aes(fill = population), size=0)
p
p <- tiles %>%
left_join(ons_pop, by="quadkey") %>%
drop_na(population) %>%
ggplot() +
geom_sf(aes(fill = population), size=0) +
scale_fill_viridis_b()
p
?scale_fill_viridis_d
p <- tiles %>%
left_join(ons_pop, by="quadkey") %>%
drop_na(population) %>%
ggplot() +
geom_sf(aes(fill = population), size=0) +
scale_fill_viridis_c()
p
p <- tiles %>%
left_join(ons_pop, by="quadkey") %>%
drop_na(population) %>%
ggplot() +
geom_sf(aes(fill = population), size=0) +
scale_fill_viridis_c(trans="log10")
p
mye_2020 <- read_csv(.args[1]) %>%
mutate(quadkey = stringr::str_pad(quadkey, 12, "left", "0"))
pop_deciles <- read_csv(.args[2])
pop_deciles
require(tidyverse)
require(sf)
if (interactive()){
.args <- c("data/oa_mid_year_estimates/2020/tile_mye_pop_2020.csv",
"data/lookups/tile_mye_pop_deciles_2019.csv",
"data/Britain_TilePopulation/tile_fb_daytime_pop.csv",
"output/figs/fb_mye_2020_comparison.png")
} else {
.args <- commandArgs(trailingOnly = T)
}
mye_2020 <- read_csv(.args[1]) %>%
mutate(quadkey = stringr::str_pad(quadkey, 12, "left", "0"))
pop_deciles <- read_csv(.args[2])
if (interactive()){
.args <- c("data/oa_mid_year_estimates/tile_mye_pop_2020.csv",
"data/lookups/tile_mye_pop_deciles_2019.csv",
"data/Britain_TilePopulation/tile_fb_daytime_pop.csv",
"output/figs/fb_mye_2020_comparison.png")
} else {
.args <- commandArgs(trailingOnly = T)
}
mye_2020 <- read_csv(.args[1]) %>%
mutate(quadkey = stringr::str_pad(quadkey, 12, "left", "0"))
if (interactive()){
.args <- c("data/mid_year_estimates/tile_mye_pop_2020.csv",
"data/lookups/tile_mye_pop_deciles_2019.csv",
"data/Britain_TilePopulation/tile_fb_daytime_pop.csv",
"output/figs/fb_mye_2020_comparison.png")
} else {
.args <- commandArgs(trailingOnly = T)
}
mye_2020 <- read_csv(.args[1]) %>%
mutate(quadkey = stringr::str_pad(quadkey, 12, "left", "0"))
mye_2020
pop_deciles <- read_csv(.args[2])
pop_deciles
pop_deciles <- read_csv(.args[2]) %>%
mutate(quadkey = stringr::str_pad(quadkey, 12, "left", "0"))
fb_pop <- read_csv(.args[3]) %>%
mutate(date_time = as.Date(date_time))
rm(list = ls())
p <- tiles %>%
left_join(ons_pop, by="quadkey") %>%
drop_na(population) %>%
ggplot() +
geom_sf(aes(fill = population), size=0) +
scale_fill_viridis_c(trans="log10") +
theme_void() +
theme(plot.background = element_rect(fill="white", size=0))
