breaks <- ggutils::inclusive_class_breaks(fb_pop_mye_2020_diff$diff,
style="pretty", 6)
fb_pop_mye_2020_diff %>%
ggutils::classify_intervals("diff", breaks)
fb_pop_mye_2020_diff <- fb_pop_mye_2020_diff %>%
ggutils::classify_intervals("diff", breaks)
fb_pop_mye_2020_diff %>%
ggplot() +
geom_sf(aes(fill = value), size=0)
fb_pop_mye_2020_diff
pal <- c('#b2182b','#d6604d','#f4a582','#fddbc7','#d1e5f0','#92c5de','#4393c3','#2166ac')
names(pal) <- levels(fb_pop_mye_2020_diff$value)
pal <- c('#b2182b','#d6604d','#f4a582','#fddbc7','#d1e5f0','#92c5de','#4393c3','#2166ac')
names(pal) <- levels(fb_pop_mye_2020_diff$value)
fb_pop_mye_2020_diff %>%
ggplot() +
geom_sf(aes(fill = value), size=0) +
scale_fill_manual(values = pal, labels = scales::comma)
pal
pal <- c('#b2182b','#d6604d','#f4a582','#fddbc7','#d1e5f0','#92c5de','#4393c3','#2166ac')
names(pal) <- levels(fb_pop_mye_2020_diff$value)
pal
fb_pop_mye_2020_diff %>%
ggplot() +
geom_sf(aes(fill = value), size=0) +
scale_fill_manual(values = pal, labels = scales::comma)
fb_pop_mye_2020_diff %>%
ggplot() +
geom_sf(aes(fill = value), size=0) +
scale_fill_manual(values = pal)
breaks <- ggutils::inclusive_class_breaks(fb_pop_mye_2020_diff$diff,
style="pretty", 8)
fb_pop_mye_2020_diff <- fb_pop_mye_2020_diff %>%
ggutils::classify_intervals("diff", breaks)
pal <- c('#b2182b','#d6604d','#f4a582','#fddbc7','#d1e5f0','#92c5de','#4393c3','#2166ac')
names(pal) <- levels(fb_pop_mye_2020_diff$value)
fb_pop_mye_2020_diff %>%
ggplot() +
geom_sf(aes(fill = value), size=0) +
scale_fill_manual(values = pal)
pal
fb_pop_mye_2020_diff <- tiles %>%
left_join(mye_2020, by = "quadkey") %>%
left_join(fb_pop %>% filter(date_time == as.Date("2020-06-30")), by = "quadkey") %>%
drop_na(population, n_crisis_adj) %>%
mutate(diff = n_crisis_adj - population)
breaks <- ggutils::inclusive_class_breaks(fb_pop_mye_2020_diff$diff,
style="pretty", 8)
breaks
fb_pop_mye_2020_diff <- fb_pop_mye_2020_diff %>%
ggutils::classify_intervals("diff", breaks)
pal <- c('#b2182b','#d6604d','#f4a582','#fddbc7','#d1e5f0','#92c5de','#4393c3','#2166ac')
fb_pop_mye_2020_diff
breaks <- ggutils::inclusive_class_breaks(fb_pop_mye_2020_diff$diff,
style="pretty", 6)
fb_pop_mye_2020_diff <- fb_pop_mye_2020_diff %>%
ggutils::classify_intervals("diff", breaks)
pal <- c('#b2182b','#d6604d','#f4a582','#fddbc7','#d1e5f0','#92c5de','#4393c3','#2166ac')
names(pal) <- levels(fb_pop_mye_2020_diff$value)
fb_pop_mye_2020_diff %>%
ggplot() +
geom_sf(aes(fill = value), size=0) +
scale_fill_manual(values = pal)
pal <- c('#b2182b','#d6604d','#f4a582','#fddbc7','#d1e5f0','#92c5de')
names(pal) <- levels(fb_pop_mye_2020_diff$value)
pal
fb_pop_mye_2020_diff %>%
ggplot() +
geom_sf(aes(fill = value), size=0) +
scale_fill_manual(values = pal)
fb_pop_mye_2020_diff %>%
ggplot() +
geom_sf(aes(fill = value), size=0) +
scale_fill_manual(values = pal, guide = guide_legend(reverse = TRUE))
pal <- c('#67001f','#b2182b','#d6604d','#f4a582','#fddbc7','#d1e5f0','#92c5de')
names(pal) <- levels(fb_pop_mye_2020_diff$value)
fb_pop_mye_2020_diff %>%
ggplot() +
geom_sf(aes(fill = value), size=0) +
scale_fill_manual(values = pal, guide = guide_legend(reverse = TRUE))
pal <- c('#67001f','#b2182b','#d6604d','#f4a582','#fddbc7','#92c5de')
names(pal) <- levels(fb_pop_mye_2020_diff$value)
fb_pop_mye_2020_diff %>%
ggplot() +
geom_sf(aes(fill = value), size=0) +
scale_fill_manual(values = pal, guide = guide_legend(reverse = TRUE))
breaks
# density of error?
fb_pop_mye_2020_diff %>%
ggplot() +
geom_density(aes(x = diff))
# density of error?
fb_pop_mye_2020_diff %>%
ggplot() +
geom_density(aes(x = diff)) +
scale_x_continuous(trans="log10")
# density of error?
fb_pop_mye_2020_diff %>%
ggplot() +
geom_density(aes(x = diff)) +
scale_x_continuous(trans="log10", labels=scales::comma())
# density of error?
fb_pop_mye_2020_diff %>%
ggplot() +
geom_density(aes(x = diff)) +
scale_x_continuous(trans="log10", labels=scales::comma)
# density of error?
fb_pop_mye_2020_diff %>%
ggplot() +
geom_density(aes(x = diff)) +
scale_x_continuous(trans="pseudo_log", labels=scales::comma)
# density of error?
fb_pop_mye_2020_diff
# density of error?
fb_pop_mye_2020_diff %>%
ggplot() +
geom_density(aes(x = diff)) +
scale_x_continuous(labels=scales::comma)
ggutils::inclusive_class_breaks
classInt::classIntervals
?classInt::classIntervals
breaks <- ggutils::inclusive_class_breaks(fb_pop_mye_2020_diff$diff,
style="quantile", 6)
fb_pop_mye_2020_diff <- fb_pop_mye_2020_diff %>%
ggutils::classify_intervals("diff", breaks)
pal <- c('#67001f','#b2182b','#d6604d','#f4a582','#fddbc7','#92c5de')
names(pal) <- levels(fb_pop_mye_2020_diff$value)
fb_pop_mye_2020_diff %>%
ggplot() +
geom_sf(aes(fill = value), size=0) +
scale_fill_manual(values = pal, guide = guide_legend(reverse = TRUE))
# density of error?
fb_pop_mye_2020_diff %>%
ggplot() +
geom_density(aes(x = diff)) +
scale_x_continuous(labels=scales::comma)
fb_pop_mye_2020_diff %>%
ggplot() +
geom_sf(aes(fill = value), size=0) +
scale_fill_manual(values = pal, guide = guide_legend(reverse = TRUE))
breaks
c(-250000, -100000, -10000, -1000, 0, 1000, 3000)
breaks <- c(-250000, -100000, -10000, -1000, 0, 1000, 3000)
fb_pop_mye_2020_diff <- fb_pop_mye_2020_diff %>%
ggutils::classify_intervals("diff", breaks)
pal <- c('#67001f','#b2182b','#d6604d','#f4a582','#fddbc7','#92c5de')
names(pal) <- levels(fb_pop_mye_2020_diff$value)
fb_pop_mye_2020_diff %>%
ggplot() +
geom_sf(aes(fill = value), size=0) +
scale_fill_manual(values = pal, guide = guide_legend(reverse = TRUE))
pal <- c('#67001f','#b2182b','#d6604d','#f4a582', '#92c5de', '#4393c3','#92c5de')
names(pal) <- levels(fb_pop_mye_2020_diff$value)
fb_pop_mye_2020_diff %>%
ggplot() +
geom_sf(aes(fill = value), size=0) +
scale_fill_manual(values = pal, guide = guide_legend(reverse = TRUE))
pal <- c('#67001f','#b2182b','#d6604d','#f4a582', '#92c5de', '#4393c3')
names(pal) <- levels(fb_pop_mye_2020_diff$value)
fb_pop_mye_2020_diff %>%
ggplot() +
geom_sf(aes(fill = value), size=0) +
scale_fill_manual(values = pal, guide = guide_legend(reverse = TRUE))
pal <- c('#b2182b','#d6604d','#f4a582','#fddbc7', '#92c5de', '#4393c3')
names(pal) <- levels(fb_pop_mye_2020_diff$value)
fb_pop_mye_2020_diff %>%
ggplot() +
geom_sf(aes(fill = value), size=0) +
scale_fill_manual(values = pal, guide = guide_legend(reverse = TRUE))
fb_pop_mye_2020_diff %>%
ggplot() +
geom_sf(aes(fill = value), size=0) +
scale_fill_manual(values = pal, guide = guide_legend(reverse = TRUE)) +
theme_void()
fb_pop_mye_2020_diff %>%
ggplot() +
geom_sf(aes(fill = value), size=0) +
scale_fill_manual(values = pal, guide = guide_legend(reverse = TRUE)) +
theme_void() +
label_both(fill=NULL)
fb_pop_mye_2020_diff %>%
ggplot() +
geom_sf(aes(fill = value), size=0) +
scale_fill_manual(values = pal, guide = guide_legend(reverse = TRUE)) +
theme_void() +
labs(fill=NULL)
fb_pop_mye_2020_diff %>%
ggplot() +
ggutils::plot_basemap("United Kingdom") +
geom_sf(aes(fill = value), size=0) +
ggutils::geo_lims(fb_pop_mye_2020_diff) +
scale_fill_manual(values = pal, guide = guide_legend(reverse = TRUE)) +
theme_void() +
labs(fill=NULL)
fb_pop_mye_2020_diff %>%
ggplot() +
geom_sf(aes(fill = value), size=0) +
ggutils::plot_basemap("United Kingdom") +
ggutils::geo_lims(fb_pop_mye_2020_diff) +
scale_fill_manual(values = pal, guide = guide_legend(reverse = TRUE)) +
theme_void() +
labs(fill=NULL)
p_map <- fb_pop_mye_2020_diff %>%
ggplot() +
ggutils::plot_basemap("United Kingdom") +
geom_sf(aes(fill = value), size=0) +
ggutils::geo_lims(fb_pop_mye_2020_diff) +
scale_fill_manual(values = pal, guide = guide_legend(reverse = TRUE)) +
theme_void() +
labs(fill=NULL)
p_fb_mye_comparison_proportional
p_fb_mye_comparison_proportional +
facet_wrap(~pop_decile, scales="free_y")
p_map <- fb_pop_mye_2020_diff %>%
ggplot() +
ggutils::plot_basemap("United Kingdom") +
geom_sf(aes(fill = value), size=0) +
ggutils::geo_lims(fb_pop_mye_2020_diff) +
scale_fill_manual(values = pal, guide = guide_legend(reverse = TRUE)) +
theme_void() +
labs(fill=NULL)
p_fb_mye_comparison_proportional +
facet_wrap(~pop_decile, scales="free_y", )
p_fb_mye_comparison_proportional <- fb_pop %>%
filter(date_time < as.Date("2021-03-10")) %>%
left_join(pop_deciles_2019, by = c("quadkey")) %>%
drop_na(pop_decile) %>%
group_by(date_time, pop_decile) %>%
summarise(n_crisis = sum(n_crisis), .groups="drop") %>% # daily fb pop per decile
group_by(date_time) %>%
mutate(n_crisis_proportion = n_crisis / sum(n_crisis)) %>% # daily proportional fb pop
label_pop_decile() %>%
ggplot() +
geom_path(aes(x = date_time, y = n_crisis_proportion, color=pop_decile, group=pop_decile), size=0.3) +
geom_vline(aes(xintercept=as.Date("2020-06-30")), linetype="dashed") +
geom_hline(data = mye_2020_decile_proportional, aes(color=pop_decile, yintercept=pop_proportion),
linetype="dashed") +
#geom_label(aes(x = as.Date("2020-06-30"), y = 0.3, label="ONS Mid-Year Estimate Date")) +
scale_y_continuous(trans="log10") +
theme_classic() +
labs(color="Population\nDecile", x=NULL, y="Population Proportion")
a = 1
p_fb_mye_comparison_proportional <- fb_pop %>%
filter(date_time < as.Date("2021-03-10")) %>%
left_join(pop_deciles_2019, by = c("quadkey")) %>%
drop_na(pop_decile) %>%
group_by(date_time, pop_decile) %>%
summarise(n_crisis = sum(n_crisis), .groups="drop") %>% # daily fb pop per decile
group_by(date_time) %>%
mutate(n_crisis_proportion = n_crisis / sum(n_crisis)) %>% # daily proportional fb pop
label_pop_decile() %>%
ggplot() +
geom_path(aes(x = date_time, y = n_crisis_proportion, color=pop_decile, group=pop_decile), size=0.3) +
geom_vline(aes(xintercept=as.Date("2020-06-30")), linetype="dashed") +
geom_hline(data = mye_2020_decile_proportional, aes(color=pop_decile, yintercept=pop_proportion),
linetype="dashed") +
#geom_label(aes(x = as.Date("2020-06-30"), y = 0.3, label="ONS Mid-Year Estimate Date")) +
scale_y_continuous(trans="log10") +
theme_classic() +
labs(color="Population\nDecile", x=NULL, y="Population Proportion")
p_fb_mye_comparison_proportional
p_fb_mye_comparison_proportional +
facet_wrap(~pop_decile, scales="free_y") +
labs(title = "b")
p_fb_mye_comparison_proportional <- fb_pop %>%
filter(date_time < as.Date("2021-03-10")) %>%
left_join(pop_deciles_2019, by = c("quadkey")) %>%
drop_na(pop_decile) %>%
group_by(date_time, pop_decile) %>%
summarise(n_crisis = sum(n_crisis), .groups="drop") %>% # daily fb pop per decile
group_by(date_time) %>%
mutate(n_crisis_proportion = n_crisis / sum(n_crisis)) %>% # daily proportional fb pop
label_pop_decile() %>%
ggplot() +
geom_path(aes(x = date_time, y = n_crisis_proportion, color=pop_decile, group=pop_decile), size=0.3) +
geom_vline(aes(xintercept=as.Date("2020-06-30")), size=0.5) +
geom_hline(data = mye_2020_decile_proportional, aes(color=pop_decile, yintercept=pop_proportion),
linetype="dashed") +
#geom_label(aes(x = as.Date("2020-06-30"), y = 0.3, label="ONS Mid-Year Estimate Date")) +
scale_y_continuous(trans="log10") +
theme_classic() +
labs(color="Population\nDecile", x=NULL, y="Population Proportion")
p_fb_mye_comparison_proportional +
facet_wrap(~pop_decile, scales="free_y") +
labs(title = "b")
p_fb_mye_comparison_proportional <- fb_pop %>%
filter(date_time < as.Date("2021-03-10")) %>%
left_join(pop_deciles_2019, by = c("quadkey")) %>%
drop_na(pop_decile) %>%
group_by(date_time, pop_decile) %>%
summarise(n_crisis = sum(n_crisis), .groups="drop") %>% # daily fb pop per decile
group_by(date_time) %>%
mutate(n_crisis_proportion = n_crisis / sum(n_crisis)) %>% # daily proportional fb pop
label_pop_decile() %>%
ggplot() +
geom_path(aes(x = date_time, y = n_crisis_proportion, color=pop_decile, group=pop_decile), size=0.3) +
geom_vline(aes(xintercept=as.Date("2020-06-30")), size=0.3) +
geom_hline(data = mye_2020_decile_proportional, aes(color=pop_decile, yintercept=pop_proportion),
linetype="dashed") +
#geom_label(aes(x = as.Date("2020-06-30"), y = 0.3, label="ONS Mid-Year Estimate Date")) +
scale_y_continuous(trans="log10") +
theme_classic() +
labs(color="Population\nDecile", x=NULL, y="Population Proportion")
p_fb_mye_comparison_proportional +
facet_wrap(~pop_decile, scales="free_y") +
labs(title = "b")
p_fb_mye_comparison_proportional <- fb_pop %>%
filter(date_time < as.Date("2021-03-10")) %>%
left_join(pop_deciles_2019, by = c("quadkey")) %>%
drop_na(pop_decile) %>%
group_by(date_time, pop_decile) %>%
summarise(n_crisis = sum(n_crisis), .groups="drop") %>% # daily fb pop per decile
group_by(date_time, pop_decile) %>%
mutate(n_crisis_proportion = n_crisis / sum(n_crisis)) %>% # daily proportional fb pop
label_pop_decile() %>%
ggplot() +
geom_path(aes(x = date_time, y = n_crisis_proportion, color=pop_decile, group=pop_decile), size=0.3) +
geom_vline(aes(xintercept=as.Date("2020-06-30")), size=0.3) +
geom_hline(data = mye_2020_decile_proportional, aes(color=pop_decile, yintercept=pop_proportion),
linetype="dashed") +
#geom_label(aes(x = as.Date("2020-06-30"), y = 0.3, label="ONS Mid-Year Estimate Date")) +
scale_y_continuous(trans="log10") +
theme_classic() +
labs(color="Population\nDecile", x=NULL, y="Population Proportion")
p_fb_mye_comparison_proportional
p_fb_mye_comparison_proportional <- fb_pop %>%
filter(date_time < as.Date("2021-03-10")) %>%
left_join(pop_deciles_2019, by = c("quadkey")) %>%
drop_na(pop_decile) %>%
group_by(date_time, pop_decile) %>%
summarise(n_crisis = sum(n_crisis), .groups="drop") %>% # daily fb pop per decile
group_by(date_time) %>%
mutate(n_crisis_proportion = n_crisis / sum(n_crisis)) %>% # daily proportional fb pop
label_pop_decile() %>%
ggplot() +
geom_path(aes(x = date_time, y = n_crisis_proportion, color=pop_decile, group=pop_decile), size=0.3) +
geom_vline(aes(xintercept=as.Date("2020-06-30")), size=0.3) +
geom_hline(data = mye_2020_decile_proportional, aes(color=pop_decile, yintercept=pop_proportion),
linetype="dashed") +
#geom_label(aes(x = as.Date("2020-06-30"), y = 0.3, label="ONS Mid-Year Estimate Date")) +
scale_y_continuous(trans="log10") +
theme_classic() +
labs(color="Population\nDecile", x=NULL, y="Population Proportion")
p_fb_mye_comparison_proportional
p_fb_mye_comparison_proportional +
facet_wrap(~pop_decile, scales="free_y") +
labs(title = "b")
p_map <- fb_pop_mye_2020_diff %>%
ggplot() +
ggutils::plot_basemap("United Kingdom") +
geom_sf(aes(fill = value), size=0) +
ggutils::geo_lims(fb_pop_mye_2020_diff) +
scale_fill_manual(values = pal, guide = guide_legend(reverse = TRUE)) +
theme_void() +
labs(fill=NULL, title="a")
p_comparison_facet <- p_fb_mye_comparison_proportional +
facet_wrap(~pop_decile, scales="free_y") +
labs(title = "b")
p <- cowplot::plot_grid(p_map, p_comparison_facet, ncol=2, rel_widths = c(0.4, 0.6))
ggsave(tail(.args, 1),
p,
width=15, height=6, units="in")
p_map <- fb_pop_mye_2020_diff %>%
ggplot() +
ggutils::plot_basemap("United Kingdom") +
geom_sf(aes(fill = value), size=0) +
ggutils::geo_lims(fb_pop_mye_2020_diff) +
scale_fill_manual(values = pal, guide = guide_legend(reverse = TRUE)) +
theme_void() +
theme(legend.position = c(0.8, 0.8)) +
labs(fill=NULL, title="a")
p_comparison_facet <- p_fb_mye_comparison_proportional +
facet_wrap(~pop_decile, scales="free_y") +
labs(title = "b")
p <- cowplot::plot_grid(p_map, p_comparison_facet, ncol=2, rel_widths = c(0.4, 0.6))
ggsave(tail(.args, 1),
p,
width=15, height=6, units="in")
p_map <- fb_pop_mye_2020_diff %>%
ggplot() +
ggutils::plot_basemap("United Kingdom") +
geom_sf(aes(fill = value), size=0) +
ggutils::geo_lims(fb_pop_mye_2020_diff) +
scale_fill_manual(values = pal, guide = guide_legend(reverse = TRUE)) +
theme_void() +
theme(legend.position = c(0.9, 0.8)) +
labs(fill=NULL, title="a")
p_comparison_facet <- p_fb_mye_comparison_proportional +
facet_wrap(~pop_decile, scales="free_y") +
labs(title = "b")
p <- cowplot::plot_grid(p_map, p_comparison_facet, ncol=2, rel_widths = c(0.4, 0.6))
ggsave(tail(.args, 1),
p,
width=15, height=6, units="in")
ggsave(tail(.args, 1),
p,
width=13, height=6, units="in")
p_map <- fb_pop_mye_2020_diff %>%
ggplot() +
ggutils::plot_basemap("United Kingdom") +
geom_sf(aes(fill = value), size=0) +
ggutils::geo_lims(fb_pop_mye_2020_diff) +
scale_fill_manual(values = pal, guide = guide_legend(reverse = TRUE)) +
theme_void() +
theme(legend.position = c(0.95, 0.8)) +
ylim(c(50, 58.5)) +
xlim(c(-9, 2)) +
labs(fill=NULL, title="a")
p_comparison_facet <- p_fb_mye_comparison_proportional +
facet_wrap(~pop_decile, scales="free_y") +
labs(title = "b")
p <- cowplot::plot_grid(p_map, p_comparison_facet, ncol=2, rel_widths = c(0.4, 0.6))
ggsave(tail(.args, 1),
p,
width=13, height=6, units="in")
p_map <- fb_pop_mye_2020_diff %>%
ggplot() +
ggutils::plot_basemap("United Kingdom") +
geom_sf(aes(fill = value), size=0) +
ggutils::geo_lims(fb_pop_mye_2020_diff) +
scale_fill_manual(values = pal, guide = guide_legend(reverse = TRUE)) +
theme_void() +
theme(legend.position = c(0.93, 0.8)) +
ylim(c(50, 58.5)) +
xlim(c(-9, 2)) +
labs(fill=NULL, title="a")
p_comparison_facet <- p_fb_mye_comparison_proportional +
facet_wrap(~pop_decile, scales="free_y") +
labs(title = "b")
p <- cowplot::plot_grid(p_map, p_comparison_facet, ncol=2, rel_widths = c(0.4, 0.6))
ggsave(tail(.args, 1),
p,
width=13, height=6, units="in")
p_comparison_facet <- p_fb_mye_comparison_proportional +
facet_wrap(~pop_decile, scales="free_y") +
labs(title = "b") +
theme(legend.position = "none")
p <- cowplot::plot_grid(p_map, p_comparison_facet, ncol=2, rel_widths = c(0.4, 0.6))
ggsave(tail(.args, 1),
p,
width=13, height=6, units="in")
fb_pop
fb_pop_mye_2020_diff
1000 - 900
1000 - 1100
fb_pop_mye_2020_diff
fb_pop_mye_2020_diff$population
fb_pop_mye_2020_diff$population %>% sum()
fb_pop_mye_2020_diff$population %>% sum() %>% scales::comma()
fb_pop_mye_2020_diff$n_crisis_adj %>% sum() %>% scales::comma()
total_pop_2020 <- fb_pop_mye_2020_diff$population %>% sum()
total_pop_2020_mye <- fb_pop_mye_2020_diff$population %>% sum()
total_pop_2020_fb <- fb_pop_mye_2020_diff$n_crisis_adj %>% sum()
total_pop_2020_mye
total_pop_2020_fb
(total_pop_2020_mye - total_pop_2020_fb)
(total_pop_2020_mye - total_pop_2020_fb) / total_pop_2020_mye
total_pop_diff <- (total_pop_2020_mye - total_pop_2020_fb)
total_pop_diff_perc <- total_pop_diff / total_pop_2020_mye
total_pop_diff
total_pop_diff_perc
total_pop_diff <- (total_pop_2020_mye - total_pop_2020_fb) %>% scale::comma()
total_pop_diff <- (total_pop_2020_mye - total_pop_2020_fb) %>% scales::comma()
total_pop_diff
total_pop_diff_perc <- total_pop_diff / total_pop_2020_mye %>% scales::percent()
total_pop_diff_perc <- (total_pop_diff / total_pop_2020_mye) %>% scales::percent()
total_pop_diff <- (total_pop_2020_mye - total_pop_2020_fb) %>% scales::comma()
total_pop_diff
total_pop_diff <- (total_pop_2020_mye - total_pop_2020_fb)
total_pop_diff_perc <- total_pop_diff / total_pop_2020_mye
scales::percent(total_pop_diff_perc)
scales::comma(total_pop_diff)
scales::percent(total_pop_diff_perc)
fb_pop_mye_2020_diff
fb_pop_mye_2020_diff %>%
left_join(pop_deciles_2019)
fb_pop_mye_2020_diff %>%
left_join(pop_deciles_2019, by="quadkey")
fb_pop_mye_2020_diff %>%
left_join(pop_deciles_2019, by="quadkey") %>%
filter(pop_decile == 10)
fb_pop_mye_2020_diff %>%
left_join(pop_deciles_2019, by="quadkey") %>%
filter(pop_decile == 10)
top_decile_diff <- fb_pop_mye_2020_diff %>%
left_join(pop_deciles_2019, by="quadkey") %>%
filter(pop_decile == 10)
total_pop_2020_mye <- top_decile_diff$population %>% sum()
total_pop_2020_mye
total_pop_2020_fb <- top_decile_diff$n_crisis_adj %>% sum()
total_pop_2020_fb
total_pop_diff <- (total_pop_2020_mye - total_pop_2020_fb)
total_pop_diff
total_pop_diff_perc <- total_pop_diff / total_pop_2020_mye
total_pop_diff_perc
scales::comma(total_pop_diff)
scales::percent(total_pop_diff_perc)
scales::comma(total_pop_diff)
total_pop_2020_mye <- fb_pop_mye_2020_diff$population %>% sum()
total_pop_2020_fb <- fb_pop_mye_2020_diff$n_crisis_adj %>% sum()
total_pop_diff <- (total_pop_2020_mye - total_pop_2020_fb)
total_pop_diff_perc <- total_pop_diff / total_pop_2020_mye
scales::comma(total_pop_diff)
scales::percent(total_pop_diff_perc)
top_decile_diff <- fb_pop_mye_2020_diff %>%
left_join(pop_deciles_2019, by="quadkey") %>%
filter(pop_decile == 10)
total_pop_2020_mye <- top_decile_diff$population %>% sum()
total_pop_2020_fb <- top_decile_diff$n_crisis_adj %>% sum()
total_pop_diff <- (total_pop_2020_mye - total_pop_2020_fb)
total_pop_diff_perc <- total_pop_diff / total_pop_2020_mye
scales::comma(total_pop_diff)
